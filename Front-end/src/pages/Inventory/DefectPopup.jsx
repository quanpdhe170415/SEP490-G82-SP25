"use client"

import { useState } from "react"
import "./DefectPopup.css"

export function DefectPopup({ item, onSave, onCancel, onImageUpload }) {
  const [defectQuantity, setDefectQuantity] = useState(item.defectInfo?.quantity || 1)
  const [defectReason, setDefectReason] = useState(item.defectInfo?.reason || "")
  const [defectNotes, setDefectNotes] = useState(item.defectInfo?.notes || "")

  const defectReasons = ["H·ªèng", "H·∫øt h·∫°n", "M√≥p m√©o", "Bao b√¨ r√°ch", "·∫®m m·ªëc", "B·∫©n", "Thi·∫øu ph·ª• ki·ªán", "Kh√°c"]

  const handleSave = () => {
    if (!defectReason) {
      alert("Vui l√≤ng ch·ªçn l√Ω do l·ªói!")
      return
    }

    onSave({
      quantity: defectQuantity,
      reason: defectReason,
      notes: defectNotes,
      image: item.defectInfo?.image,
    })
  }

  return (
    <div className="defect-popup">
      <div className="popup-header">
        <div>
          <h3 className="popup-title">Ghi nh·∫≠n h√†ng l·ªói</h3>
          <p className="popup-subtitle">
            {item.name} ({item.code})
          </p>
        </div>
        <button className="close-button" onClick={onCancel}>
          ‚úï
        </button>
      </div>

      <div className="popup-content">
        <div className="form-grid">
          <div className="form-group">
            <label className="form-label">
              S·ªë l∆∞·ª£ng l·ªói <span className="required">*</span>
            </label>
            <input
              type="number"
              min="0"
              max={item.actualQuantity || item.expectedQuantity}
              value={defectQuantity}
              onChange={(e) => setDefectQuantity(Number(e.target.value))}
              className="form-input"
            />
          </div>

          <div className="form-group">
            <label className="form-label">
              L√Ω do l·ªói <span className="required">*</span>
            </label>
            <select value={defectReason} onChange={(e) => setDefectReason(e.target.value)} className="form-select">
              <option value="">-- Ch·ªçn l√Ω do --</option>
              {defectReasons.map((reason) => (
                <option key={reason} value={reason}>
                  {reason}
                </option>
              ))}
            </select>
          </div>
        </div>

        <div className="form-group image-upload">
          <label className="form-label">ƒê√≠nh k√®m ·∫£nh</label>
          <div className="upload-buttons">
            <button
              type="button"
              className="upload-button"
              onClick={() => {
                const input = document.createElement("input")
                input.type = "file"
                input.accept = "image/*"
                input.capture = "camera"
                input.onchange = (e) => {
                  const file = e.target.files?.[0]
                  if (file) onImageUpload(item.id, file)
                }
                input.click()
              }}
            >
              <span className="upload-icon">üì∑</span>
              Ch·ª•p ·∫£nh
            </button>
            <button
              type="button"
              className="upload-button"
              onClick={() => {
                const input = document.createElement("input")
                input.type = "file"
                input.accept = "image/*"
                input.onchange = (e) => {
                  const file = e.target.files?.[0]
                  if (file) onImageUpload(item.id, file)
                }
                input.click()
              }}
            >
              <span className="upload-icon">üìÅ</span>
              T·∫£i l√™n
            </button>
          </div>
          {item.defectInfo?.image && (
            <img src={item.defectInfo.image || "/placeholder.svg"} alt="·∫¢nh l·ªói" className="image-preview" />
          )}
        </div>

        <div className="form-group">
          <label className="form-label">Ghi ch√∫ th√™m</label>
          <textarea
            value={defectNotes}
            onChange={(e) => setDefectNotes(e.target.value)}
            placeholder="M√¥ t·∫£ chi ti·∫øt v·ªÅ l·ªói..."
            className="form-textarea"
            rows={3}
          />
        </div>
      </div>

      <div className="popup-footer">
        <button className="footer-button cancel" onClick={onCancel}>
          H·ªßy
        </button>
        <button className="footer-button save" onClick={handleSave}>
          L∆∞u th√¥ng tin l·ªói
        </button>
      </div>
    </div>
  )
}
